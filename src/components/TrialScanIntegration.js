/**\n * Trial Scan Integration Component\n * Adds trial scan functionality to existing dashboard\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport dataService from '../services/dataService';\nimport TrialScanDashboard from './TrialScanDashboard';\n\nconst TrialScanIntegration = ({ showFullDashboard = false }) => {\n    const { user, isAuthenticated } = useAuth();\n    const [scanData, setScanData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [showDashboard, setShowDashboard] = useState(showFullDashboard);\n\n    useEffect(() => {\n        if (isAuthenticated && user?.id) {\n            loadScanSummary();\n        }\n    }, [isAuthenticated, user]);\n\n    const loadScanSummary = async () => {\n        try {\n            setLoading(true);\n            \n            // Check for active scan\n            const activeScanResult = await dataService.getActiveScan(user.id);\n            if (activeScanResult.success) {\n                const scanStatus = await dataService.getTrialScanStatus(activeScanResult.data.id);\n                if (scanStatus.success) {\n                    setScanData(scanStatus.data);\n                    return;\n                }\n            }\n            \n            // Get most recent scan\n            const recentScans = await dataService.getUserTrialScans(user.id, 1);\n            if (recentScans.success && recentScans.data.length > 0) {\n                const latestScan = recentScans.data[0];\n                const scanStatus = await dataService.getTrialScanStatus(latestScan.id);\n                if (scanStatus.success) {\n                    setScanData(scanStatus.data);\n                }\n            }\n            \n        } catch (error) {\n            console.error('[TrialScanIntegration] Failed to load scan summary:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const startTrialScan = async () => {\n        try {\n            setLoading(true);\n            \n            const result = await dataService.startTrialScan(user, {\n                simulationSpeed: 'normal',\n                includePeopleSearch: true,\n                includeSocialMedia: true,\n                includeBackgroundChecks: true,\n                includeDataBreaches: true\n            });\n            \n            if (result.success) {\n                // Reload scan data\n                await loadScanSummary();\n                \n                // Show full dashboard\n                setShowDashboard(true);\n            } else {\n                console.error('Failed to start trial scan:', result.error);\n            }\n            \n        } catch (error) {\n            console.error('[TrialScanIntegration] Failed to start scan:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (showDashboard) {\n        return (\n            <div className=\"trial-scan-full\">\n                <button \n                    onClick={() => setShowDashboard(false)}\n                    className=\"back-button\"\n                >\n                    ‚Üê Back to Summary\n                </button>\n                <TrialScanDashboard />\n            </div>\n        );\n    }\n\n    if (!isAuthenticated) {\n        return (\n            <div className=\"trial-scan-widget\">\n                <div className=\"widget-header\">\n                    <h3>Privacy Scan</h3>\n                    <p>Sign in to scan for exposed personal information</p>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"trial-scan-widget\">\n            <div className=\"widget-header\">\n                <h3>Privacy Scan</h3>\n                <p>Scan the web for exposed personal information</p>\n            </div>\n\n            {loading && (\n                <div className=\"loading-state\">\n                    <div className=\"spinner\"></div>\n                    <span>Loading scan data...</span>\n                </div>\n            )}\n\n            {!loading && scanData && (\n                <div className=\"scan-summary\">\n                    <div className=\"scan-status\">\n                        <div className=\"status-indicator\">\n                            <span className={`status-dot ${scanData.scan.status}`}></span>\n                            <span className=\"status-text\">\n                                {scanData.scan.status === 'running' ? 'Scanning...' : \n                                 scanData.scan.status === 'completed' ? 'Scan Complete' :\n                                 scanData.scan.status.replace('_', ' ').toUpperCase()}\n                            </span>\n                        </div>\n                        \n                        {scanData.scan.status === 'running' && (\n                            <div className=\"progress-mini\">\n                                <div \n                                    className=\"progress-fill\" \n                                    style={{ width: `${scanData.scan.progress_percentage || 0}%` }}\n                                ></div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"scan-stats-mini\">\n                        <div className=\"stat-mini\">\n                            <span className=\"number\">{scanData.threats?.length || 0}</span>\n                            <span className=\"label\">Threats</span>\n                        </div>\n                        <div className=\"stat-mini\">\n                            <span className=\"number\">\n                                {scanData.threats?.filter(t => ['high', 'critical'].includes(t.severity)).length || 0}\n                            </span>\n                            <span className=\"label\">High Risk</span>\n                        </div>\n                        <div className=\"stat-mini\">\n                            <span className=\"number\">\n                                {scanData.removalRequests?.filter(r => r.status === 'completed').length || 0}\n                            </span>\n                            <span className=\"label\">Removed</span>\n                        </div>\n                    </div>\n\n                    <div className=\"widget-actions\">\n                        <button \n                            onClick={() => setShowDashboard(true)}\n                            className=\"view-details-btn\"\n                        >\n                            View Details\n                        </button>\n                        \n                        {scanData.scan.status !== 'running' && (\n                            <button \n                                onClick={startTrialScan}\n                                className=\"new-scan-btn\"\n                                disabled={loading}\n                            >\n                                New Scan\n                            </button>\n                        )}\n                    </div>\n                </div>\n            )}\n\n            {!loading && !scanData && (\n                <div className=\"no-scan-data\">\n                    <div className=\"scan-illustration\">\n                        <div className=\"scan-icon\">üîç</div>\n                    </div>\n                    <p>No previous scans found. Start your first privacy scan to see what personal information is exposed online.</p>\n                    \n                    <button \n                        onClick={startTrialScan}\n                        className=\"start-scan-btn\"\n                        disabled={loading}\n                    >\n                        {loading ? 'Starting...' : 'Start Privacy Scan'}\n                    </button>\n                </div>\n            )}\n\n            <style jsx>{`\n                .trial-scan-widget {\n                    background: white;\n                    border-radius: 12px;\n                    padding: 24px;\n                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n                    max-width: 400px;\n                    margin: 20px 0;\n                }\n\n                .widget-header h3 {\n                    margin: 0 0 8px 0;\n                    color: #1e293b;\n                    font-size: 1.25rem;\n                    font-weight: 600;\n                }\n\n                .widget-header p {\n                    margin: 0 0 20px 0;\n                    color: #64748b;\n                    font-size: 0.9rem;\n                }\n\n                .loading-state {\n                    display: flex;\n                    align-items: center;\n                    gap: 12px;\n                    padding: 20px;\n                    text-align: center;\n                    color: #64748b;\n                }\n\n                .spinner {\n                    width: 20px;\n                    height: 20px;\n                    border: 2px solid #e2e8f0;\n                    border-top: 2px solid #2563eb;\n                    border-radius: 50%;\n                    animation: spin 1s linear infinite;\n                }\n\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n\n                .scan-summary {\n                    space-y: 16px;\n                }\n\n                .scan-status {\n                    margin-bottom: 16px;\n                }\n\n                .status-indicator {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                    margin-bottom: 8px;\n                }\n\n                .status-dot {\n                    width: 8px;\n                    height: 8px;\n                    border-radius: 50%;\n                    background: #64748b;\n                }\n\n                .status-dot.running {\n                    background: #10b981;\n                    animation: pulse 2s infinite;\n                }\n\n                .status-dot.completed {\n                    background: #059669;\n                }\n\n                .status-dot.failed {\n                    background: #dc2626;\n                }\n\n                @keyframes pulse {\n                    0%, 100% { opacity: 1; }\n                    50% { opacity: 0.5; }\n                }\n\n                .status-text {\n                    font-weight: 500;\n                    color: #1e293b;\n                    font-size: 0.9rem;\n                }\n\n                .progress-mini {\n                    background: #e2e8f0;\n                    border-radius: 4px;\n                    height: 4px;\n                    overflow: hidden;\n                }\n\n                .progress-fill {\n                    background: #10b981;\n                    height: 100%;\n                    border-radius: 4px;\n                    transition: width 0.3s ease;\n                }\n\n                .scan-stats-mini {\n                    display: grid;\n                    grid-template-columns: repeat(3, 1fr);\n                    gap: 12px;\n                    margin: 16px 0;\n                }\n\n                .stat-mini {\n                    text-align: center;\n                    padding: 12px;\n                    background: #f8fafc;\n                    border-radius: 8px;\n                }\n\n                .stat-mini .number {\n                    display: block;\n                    font-size: 1.5rem;\n                    font-weight: 700;\n                    color: #1e293b;\n                    margin-bottom: 2px;\n                }\n\n                .stat-mini .label {\n                    font-size: 0.75rem;\n                    color: #64748b;\n                    font-weight: 500;\n                }\n\n                .widget-actions {\n                    display: flex;\n                    gap: 8px;\n                    margin-top: 16px;\n                }\n\n                .view-details-btn, .new-scan-btn {\n                    flex: 1;\n                    padding: 10px 16px;\n                    border: none;\n                    border-radius: 8px;\n                    font-weight: 500;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                    font-size: 0.9rem;\n                }\n\n                .view-details-btn {\n                    background: #2563eb;\n                    color: white;\n                }\n\n                .view-details-btn:hover {\n                    background: #1d4ed8;\n                    transform: translateY(-1px);\n                }\n\n                .new-scan-btn {\n                    background: #f1f5f9;\n                    color: #475569;\n                    border: 1px solid #e2e8f0;\n                }\n\n                .new-scan-btn:hover {\n                    background: #e2e8f0;\n                }\n\n                .no-scan-data {\n                    text-align: center;\n                    padding: 20px 0;\n                }\n\n                .scan-illustration {\n                    margin-bottom: 16px;\n                }\n\n                .scan-icon {\n                    font-size: 3rem;\n                    margin-bottom: 8px;\n                }\n\n                .no-scan-data p {\n                    color: #64748b;\n                    margin-bottom: 20px;\n                    line-height: 1.5;\n                }\n\n                .start-scan-btn {\n                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                    color: white;\n                    border: none;\n                    padding: 12px 24px;\n                    border-radius: 8px;\n                    font-weight: 600;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                    font-size: 1rem;\n                }\n\n                .start-scan-btn:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);\n                }\n\n                .start-scan-btn:disabled {\n                    opacity: 0.6;\n                    cursor: not-allowed;\n                    transform: none;\n                    box-shadow: none;\n                }\n\n                .back-button {\n                    background: #f1f5f9;\n                    border: 1px solid #e2e8f0;\n                    color: #475569;\n                    padding: 8px 16px;\n                    border-radius: 6px;\n                    font-weight: 500;\n                    cursor: pointer;\n                    margin-bottom: 20px;\n                    transition: all 0.2s ease;\n                }\n\n                .back-button:hover {\n                    background: #e2e8f0;\n                }\n            `}</style>\n        </div>\n    );\n};\n\nexport default TrialScanIntegration;